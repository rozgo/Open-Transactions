/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class MarketData : Displayable {
  private HandleRef swigCPtr;

  internal MarketData(IntPtr cPtr, bool cMemoryOwn) : base(otapiPINVOKE.MarketData_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(MarketData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MarketData() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapiPINVOKE.delete_MarketData(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public string gui_label {
    set {
      otapiPINVOKE.MarketData_gui_label_set(swigCPtr, value);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = otapiPINVOKE.MarketData_gui_label_get(swigCPtr);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string server_id {
    set {
      otapiPINVOKE.MarketData_server_id_set(swigCPtr, value);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = otapiPINVOKE.MarketData_server_id_get(swigCPtr);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string asset_type_id {
    set {
      otapiPINVOKE.MarketData_asset_type_id_set(swigCPtr, value);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = otapiPINVOKE.MarketData_asset_type_id_get(swigCPtr);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string currency_type_id {
    set {
      otapiPINVOKE.MarketData_currency_type_id_set(swigCPtr, value);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = otapiPINVOKE.MarketData_currency_type_id_get(swigCPtr);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t scale {
    set {
      otapiPINVOKE.MarketData_scale_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(otapiPINVOKE.MarketData_scale_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t total_assets {
    set {
      otapiPINVOKE.MarketData_total_assets_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.MarketData_total_assets_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t number_bids {
    set {
      otapiPINVOKE.MarketData_number_bids_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(otapiPINVOKE.MarketData_number_bids_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t number_asks {
    set {
      otapiPINVOKE.MarketData_number_asks_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(otapiPINVOKE.MarketData_number_asks_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t last_sale_price {
    set {
      otapiPINVOKE.MarketData_last_sale_price_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.MarketData_last_sale_price_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t current_bid {
    set {
      otapiPINVOKE.MarketData_current_bid_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.MarketData_current_bid_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t current_ask {
    set {
      otapiPINVOKE.MarketData_current_ask_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.MarketData_current_ask_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t volume_trades {
    set {
      otapiPINVOKE.MarketData_volume_trades_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(otapiPINVOKE.MarketData_volume_trades_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t volume_assets {
    set {
      otapiPINVOKE.MarketData_volume_assets_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.MarketData_volume_assets_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t volume_currency {
    set {
      otapiPINVOKE.MarketData_volume_currency_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.MarketData_volume_currency_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t recent_highest_bid {
    set {
      otapiPINVOKE.MarketData_recent_highest_bid_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.MarketData_recent_highest_bid_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t recent_lowest_ask {
    set {
      otapiPINVOKE.MarketData_recent_lowest_ask_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.MarketData_recent_lowest_ask_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public new static MarketData ot_dynamic_cast(Storable pObject) {
    IntPtr cPtr = otapiPINVOKE.MarketData_ot_dynamic_cast(Storable.getCPtr(pObject));
    MarketData ret = (cPtr == IntPtr.Zero) ? null : new MarketData(cPtr, false);
    return ret;
  }

}
