/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class TradeDataNym : Displayable {
  private HandleRef swigCPtr;

  internal TradeDataNym(IntPtr cPtr, bool cMemoryOwn) : base(otapiPINVOKE.TradeDataNym_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(TradeDataNym obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~TradeDataNym() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapiPINVOKE.delete_TradeDataNym(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public string gui_label {
    set {
      otapiPINVOKE.TradeDataNym_gui_label_set(swigCPtr, value);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = otapiPINVOKE.TradeDataNym_gui_label_get(swigCPtr);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t transaction_id {
    set {
      otapiPINVOKE.TradeDataNym_transaction_id_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.TradeDataNym_transaction_id_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t completed_count {
    set {
      otapiPINVOKE.TradeDataNym_completed_count_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(otapiPINVOKE.TradeDataNym_completed_count_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint32_t date {
    set {
      otapiPINVOKE.TradeDataNym_date_set(swigCPtr, SWIGTYPE_p_uint32_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint32_t ret = new SWIGTYPE_p_uint32_t(otapiPINVOKE.TradeDataNym_date_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t price {
    set {
      otapiPINVOKE.TradeDataNym_price_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.TradeDataNym_price_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t amount_sold {
    set {
      otapiPINVOKE.TradeDataNym_amount_sold_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.TradeDataNym_amount_sold_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public new static TradeDataNym ot_dynamic_cast(Storable pObject) {
    IntPtr cPtr = otapiPINVOKE.TradeDataNym_ot_dynamic_cast(Storable.getCPtr(pObject));
    TradeDataNym ret = (cPtr == IntPtr.Zero) ? null : new TradeDataNym(cPtr, false);
    return ret;
  }

}
