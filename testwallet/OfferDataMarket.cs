/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class OfferDataMarket : Displayable {
  private HandleRef swigCPtr;

  internal OfferDataMarket(IntPtr cPtr, bool cMemoryOwn) : base(otapiPINVOKE.OfferDataMarket_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(OfferDataMarket obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~OfferDataMarket() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          otapiPINVOKE.delete_OfferDataMarket(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public string gui_label {
    set {
      otapiPINVOKE.OfferDataMarket_gui_label_set(swigCPtr, value);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = otapiPINVOKE.OfferDataMarket_gui_label_get(swigCPtr);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t transaction_id {
    set {
      otapiPINVOKE.OfferDataMarket_transaction_id_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.OfferDataMarket_transaction_id_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t price_per_scale {
    set {
      otapiPINVOKE.OfferDataMarket_price_per_scale_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.OfferDataMarket_price_per_scale_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t available_assets {
    set {
      otapiPINVOKE.OfferDataMarket_available_assets_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.OfferDataMarket_available_assets_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_uint64_t minimum_increment {
    set {
      otapiPINVOKE.OfferDataMarket_minimum_increment_set(swigCPtr, SWIGTYPE_p_uint64_t.getCPtr(value));
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_uint64_t ret = new SWIGTYPE_p_uint64_t(otapiPINVOKE.OfferDataMarket_minimum_increment_get(swigCPtr), true);
      if (otapiPINVOKE.SWIGPendingException.Pending) throw otapiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public new static OfferDataMarket ot_dynamic_cast(Storable pObject) {
    IntPtr cPtr = otapiPINVOKE.OfferDataMarket_ot_dynamic_cast(Storable.getCPtr(pObject));
    OfferDataMarket ret = (cPtr == IntPtr.Zero) ? null : new OfferDataMarket(cPtr, false);
    return ret;
  }

}
